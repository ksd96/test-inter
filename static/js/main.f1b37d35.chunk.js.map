{"version":3,"sources":["components/Card/Card.js","components/AddCard/AddCard.js","store/actions/actionsPlaces.js","components/Sort/Sort.js","store/utils/utils.js","containers/CardsList/CardsList.js","components/CreateCard/CreateCard.js","containers/CreateCardContainer/CreateCardContainer.js","components/ChangeCard/ChangeCard.js","containers/ChangeCardContainer/ChangeCardContainer.js","App.js","store/initialStates/initialStates.js","store/initialStates/initialStateCards.js","store/reducers/reducerCards.js","store/reducers/redusers.js","store/store.js","index.js"],"names":["Card","data","onLikeCard","onChangeActiveCard","classButtonLike","classNames","like","likeCard","useCallback","date","changeActiveCard","className","title","text","onClick","type","AddCard","to","actionsPlacesTypes","actionsPlaces","payload","Sort","sortMax","sortMin","changeStorage","cards","cardsStore","JSON","stringify","localStorage","setItem","CardsList","store","useSelector","dispatch","useDispatch","history","useHistory","useEffect","parse","getItem","cardsToRender","likeCardHandler","newCards","item","changeActiveCardHandler","push","sort","Object","values","a","b","map","card","CreateCard","onCreateCard","useState","state","setState","changeTitle","evt","target","value","Date","now","changeText","createCard","preventDefault","onSubmit","name","onChange","placeholder","required","CreateCardContainer","createCardHandler","ChangeCard","onChangeInfoCard","onDeleteCard","changeCard","ChangeCardContainer","activeCard","messageWarning","alert","window","addEventListener","removeEventListener","componentToRender","changeInfoCardHandler","deleteCardHandler","App","exact","path","initialStates","places","reducerCards","action","reducers","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1b37d35.chunk.js","sourcesContent":["import \"./style/card.scss\";\nimport classNames from \"classnames\";\nimport { useCallback } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Card = ({\n  data,\n  onLikeCard,\n  onChangeActiveCard\n}) => {\n\n  const classButtonLike = classNames({\n    \"card__button-like\": true,\n    \"card__button-like_active\": data.like === true\n  });\n\n  const likeCard = useCallback(() => {\n    onLikeCard(data.date)\n  }, [onLikeCard, data.date]);\n\n  const changeActiveCard = useCallback(() => {\n    onChangeActiveCard(data.date);\n  }, [onChangeActiveCard, data.date]);\n\n  return (\n    <li className=\"card\">\n      <h3 className=\"card__title\">{data.title}</h3>\n      <p className=\"card__text\">{data.text}</p>\n      <div className=\"card__buttons\">\n        <button onClick={changeActiveCard} className=\"card__button-edit\" type=\"button\"></button>\n        <button onClick={likeCard} className={classButtonLike} type=\"button\"></button>\n      </div>\n    </li>\n  )\n};\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    text: PropTypes.string,\n    date: PropTypes.number,\n    like: PropTypes.bool\n  }),\n  onLikeCard: PropTypes.func,\n  onChangeActiveCard: PropTypes.func\n};\n\nexport default Card;\n","import { Link } from 'react-router-dom';\nimport \"./style/add-card.scss\";\n\nconst AddCard = () => {\n  return (\n    <li className=\"add-card\">\n      <Link className=\"add-card__button\" to=\"/create\"><span className=\"add-card__span\"></span></Link>\n    </li>\n  )\n};\n\nexport default AddCard;\n","const actionsPlacesTypes = {\n  CHANGE_CARDS: `CHANGE_CARDS`,\n  CHANGE_ACTIVE_CARD: `CHANGE_ACTIVE_CARD`,\n  CHANGE_SORT: `CHANGE_SORT`\n};\n\nconst actionsPlaces = {\n  changeCards: (payload) => ({type: actionsPlacesTypes.CHANGE_CARDS, payload}),\n  changeActiveCard: (payload) => ({type: actionsPlacesTypes.CHANGE_ACTIVE_CARD, payload}),\n  changeSort: (payload) => ({type: actionsPlacesTypes.CHANGE_SORT, payload})\n};\n\nexport { actionsPlaces, actionsPlacesTypes };\n","import \"./style/sorting.scss\";\nimport PropTypes from 'prop-types';\n\nconst Sort = ({sortMax, sortMin}) => {\n  return (\n    <div className=\"sorting\">\n      <h3 className=\"sorting__title\">Сортировка:</h3>\n      <button onClick={sortMax} className=\"sorting__button sorting__button_type_max\">сначала более новые</button>\n      <button onClick={sortMin} className=\"sorting__button sorting__button_type_min\">сначала более старые</button>\n    </div>\n  )\n};\n\nSort.propTypes = {\n  sortMax: PropTypes.func,\n  sortMin: PropTypes.func\n};\n\nexport default Sort;\n","const changeStorage = (cards) => {\n  const cardsStore = JSON.stringify(cards);\n  localStorage.setItem(\"cards\", cardsStore);\n};\n\nexport { changeStorage };\n","import \"./style/cards.scss\";\nimport Card from \"../../components/Card/Card\";\nimport AddCard from \"../../components/AddCard/AddCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useCallback, useEffect } from \"react\";\nimport { actionsPlaces } from \"../../store/actions/actionsPlaces\";\nimport { useHistory } from 'react-router-dom';\nimport Sort from \"../../components/Sort/Sort\";\nimport { changeStorage } from \"../../store/utils/utils\";\n\nconst CardsList = () => {\n  const store = useSelector((store) => store.cards);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const cardsStore = JSON.parse(localStorage.getItem(\"cards\"));\n    dispatch(actionsPlaces.changeCards(cardsStore));\n  }, [dispatch]);\n\n  const likeCardHandler = useCallback((date) => {\n    const newCards = store.cards;\n    const item = newCards[date];\n    if (item.like === true) {\n      item.like = false\n    } else {\n      item.like = true\n    };\n    dispatch(actionsPlaces.changeCards(newCards));\n    changeStorage(newCards);\n  }, [store.cards, dispatch]);\n\n  const changeActiveCardHandler = useCallback((date) => {\n    dispatch(actionsPlaces.changeActiveCard(date));\n    history.push(\"/change\");\n  }, [dispatch, history]);\n\n  const sortMax = useCallback(() => {\n    dispatch(actionsPlaces.changeSort(`max`));\n  }, [dispatch]);\n\n  const sortMin = useCallback(() => {\n    dispatch(actionsPlaces.changeSort(`min`));\n  }, [dispatch]);\n\n  let cardsToRender;\n  if (store.cards && store.sort === `max`) {\n    cardsToRender = Object.values(store.cards).sort((a, b) => {return b.date - a.date});\n  } else if (store.cards && store.sort === `min`) {\n    cardsToRender = Object.values(store.cards).sort((a, b) => {return a.date - b.date});\n  } else {\n    cardsToRender = null;\n  };\n\n  return (\n    <>\n    <Sort sortMax={sortMax} sortMin={sortMin} />\n    <ul className=\"cards\">\n      <AddCard />\n      {cardsToRender && cardsToRender.map((card) => {\n        return (\n          <Card key={card.date} onChangeActiveCard={changeActiveCardHandler} onLikeCard={likeCardHandler} data={card}/>\n        )\n      })}\n    </ul>\n    </>\n  )\n};\n\nexport default CardsList;\n","import \"./style/create-card.scss\";\nimport { useCallback, useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst CreateCard = ({\n  onCreateCard\n}) => {\n  const [state, setState] = useState({title: ``, text: ``, date: ``, like: false});\n\n  const changeTitle = useCallback((evt) => {\n    setState({\n      title: evt.target.value,\n      text: state.text,\n      like: false,\n      date: Date.now()\n    })\n  }, [state.text]);\n\n  const changeText = useCallback((evt) => {\n    setState({\n      title: state.title,\n      text: evt.target.value,\n      like: false,\n      date: Date.now()\n    })\n  }, [state.title]);\n\n  const createCard = useCallback((evt) => {\n    evt.preventDefault();\n    onCreateCard(state);\n  }, [onCreateCard, state]);\n\n  return (\n    <section className=\"create-card\">\n      <h1 className=\"create-card__title\">Создать карточку</h1>\n      <form onSubmit={createCard} className=\"create-card__form\" name=\"create-card\">\n        <input className=\"create-card__form-title\" type=\"text\" onChange={changeTitle} value={state.title} name=\"title-card\" placeholder=\"Введите заголовок\" required />\n        <textarea className=\"create-card__form-text\" type=\"text\" onChange={changeText} value={state.text} name=\"text-card\" placeholder=\"Введите текст\" required />\n        <button className=\"create-card__submit\" type=\"submit\">Создать</button>\n      </form>\n    </section>\n  )\n};\n\nCreateCard.propTypes = {\n  onCreateCard: PropTypes.func\n};\n\nexport default CreateCard;\n","import CreateCard from \"../../components/CreateCard/CreateCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { actionsPlaces } from \"../../store/actions/actionsPlaces\";\nimport { changeStorage } from \"../../store/utils/utils\";\n\nconst CreateCardContainer = () => {\n  const cards = useSelector((store) => store.cards.cards);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const createCardHandler = useCallback((data) => {\n    const newCards = cards;\n    newCards[data.date] = data;\n    changeStorage(newCards);\n    dispatch(actionsPlaces.changeCards(newCards));\n    history.push(\"/\");\n  }, [cards, dispatch, history]);\n\n  return (\n    <CreateCard onCreateCard={createCardHandler} />\n  )\n};\n\nexport default CreateCardContainer;\n","import { useCallback, useState } from \"react\";\nimport \"./style/change-card.scss\";\nimport PropTypes from 'prop-types';\n\nconst ChangeCard = ({data, onChangeInfoCard, onDeleteCard}) => {\nconst [state, setState] = useState({title: data.title, text: data.text, date: data.date, like: false});\n\n  const changeTitle = useCallback((evt) => {\n    setState({\n      title: evt.target.value,\n      text: state.text,\n      like: false,\n      date: state.date\n    })\n  }, [state.text, state.date]);\n\n  const changeText = useCallback((evt) => {\n    setState({\n      title: state.title,\n      text: evt.target.value,\n      like: false,\n      date: state.date\n    })\n  }, [state.title, state.date]);\n\n  const changeCard = useCallback((evt) => {\n    evt.preventDefault();\n    onChangeInfoCard(state);\n  }, [onChangeInfoCard, state]);\n\n  return (\n    <section className=\"change-card\">\n      <h1 className=\"change-card__title\">Изменить карточку</h1>\n      <form onSubmit={changeCard} className=\"change-card__form\" name=\"change-card\">\n        <input className=\"change-card__form-title\" type=\"text\" onChange={changeTitle} value={state.title} name=\"title-card\" placeholder=\"Введите заголовок\" required/>\n        <textarea className=\"change-card__form-text\" type=\"text\" onChange={changeText} value={state.text} name=\"text-card\" placeholder=\"Введите текст\" required />\n        <div className=\"change-card__buttons\">\n          <button className=\"change-card__submit\" type=\"submit\">Изменить</button>\n          <button onClick={onDeleteCard} className=\"change-card__delete\" type=\"button\">Удалить</button>\n        </div>\n      </form>\n    </section>\n  )\n};\n\nChangeCard.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    text: PropTypes.string,\n    date: PropTypes.number,\n    like: PropTypes.bool\n  }),\n  onChangeInfoCard: PropTypes.func,\n  onDeleteCard: PropTypes.func\n};\n\nexport default ChangeCard;\n","import ChangeCard from \"../../components/ChangeCard/ChangeCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useCallback, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { actionsPlaces } from \"../../store/actions/actionsPlaces\";\nimport { changeStorage } from \"../../store/utils/utils\";\n\nconst ChangeCardContainer = () => {\n  const store = useSelector((store) => store.cards);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const card = store.cards[store.activeCard];\n\n  useEffect(() => {\n    const messageWarning = () => {\n      alert(\"Если вы покуните страницу, изменения не сохранятся\");\n    };\n    window.addEventListener(\"popstate\", messageWarning)\n    return () => {window.removeEventListener(\"popstate\", messageWarning)};\n  }, []);\n\n  const changeInfoCardHandler = useCallback((data) => {\n    const newCards = store.cards;\n    newCards[store.activeCard] = data;\n    changeStorage(newCards);\n    dispatch(actionsPlaces.changeCards(newCards));\n    history.push(\"/\");\n  }, [store.cards, dispatch, history, store.activeCard]);\n\n  const deleteCardHandler = useCallback(() => {\n    const newCards = store.cards;\n    delete newCards[store.activeCard];\n    changeStorage(newCards);\n    dispatch(actionsPlaces.changeCards(newCards));\n    history.push(\"/\");\n  }, [store.cards, dispatch, history, store.activeCard]);\n\n  let componentToRender;\n  if (card) {\n    componentToRender = <ChangeCard onDeleteCard={deleteCardHandler} onChangeInfoCard={changeInfoCardHandler} data={card} />\n  } else {\n    componentToRender = null;\n    history.push(\"/\");\n  }\n\n  return (\n    <>\n    {componentToRender}\n    </>\n  )\n};\n\nexport default ChangeCardContainer;\n","import CardsList from \"./containers/CardsList/CardsList\";\nimport { Switch, Route } from 'react-router-dom';\nimport CreateCardContainer from \"./containers/CreateCardContainer/CreateCardContainer\";\nimport ChangeCardContainer from \"./containers/ChangeCardContainer/ChangeCardContainer\";\n\nfunction App() {\n  return (\n    <main className=\"main\">\n      <Switch>\n        <Route exact path=\"/\">\n          <CardsList />\n        </Route>\n        <Route path=\"/create\">\n          <CreateCardContainer />\n        </Route>\n        <Route path=\"/change\">\n          <ChangeCardContainer />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import initialStateCards from \"./initialStateCards\";\n\nconst initialStates = {\n  places: initialStateCards\n};\n\nexport default initialStates;\n","const initialStateCards = {\n  cards: {},\n  activeCard: \"\",\n  sort: `max`\n};\n\nexport default initialStateCards;\n","import { actionsPlacesTypes } from \"../actions/actionsPlaces\";\nimport initialStates from \"../initialStates/initialStates\";\n\nconst reducerCards= (state = initialStates.places, action) => {\n  switch(action.type) {\n    case actionsPlacesTypes.CHANGE_CARDS:\n      return {\n        ...state,\n        cards: action.payload\n      };\n    case actionsPlacesTypes.CHANGE_ACTIVE_CARD:\n      return {\n        ...state,\n        activeCard: action.payload\n      };\n    case actionsPlacesTypes.CHANGE_SORT:\n      return {\n        ...state,\n        sort: action.payload\n      }\n    default:\n      return state;\n  };\n};\n\nexport default reducerCards;\n","import { combineReducers } from 'redux';\nimport reducerCards from './reducerCards';\n\nconst reducers = combineReducers({\n  cards: reducerCards\n});\n\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/redusers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}